/*
 *  jQuery WQueryBuilder - v0.1.0
 *  jQuery Plugin to create sql queries an easy way
 *  
 *
 *  Made by Webbers
 *  Under MIT License
 */
!function($,window,document,undefined){function Plugin(a,b){return _.isString(b)?void this.methods[b](this,a,b):(this.element=a,this.DataTypes={TABLE:{value:"table"},COLUMN:{value:"column"},LIMIT:{value:"limit"},ORDERBY:{value:"orderby"},UNKNOW:{value:"unknow"},GROUPBY:{value:"group"},SPARECOLUMN:{value:"field"}},this.AggregateFunctions={DAY:{value:"DAY"},MONTH:{value:"MONTH"},YEAR:{value:"YEAR"},FORMAT:{value:"FORMAT"},COUNT:{value:"COUNT"},SUM:{value:"SUM"},AVERAGE:{value:"AVERAGE"}},this.options=$.extend({},defaults,b),this._defaults=defaults,this._name=pluginName,void this.init())}var pluginName="wquerybuilder",defaults={data:{}},wquery={from:[],field:[],spares:[],distintic:{},join:{},left_join:{},right_join:{},group:"",order:"",limit:0,where:{}},$selectboxTables,$selectboxTableColumns,$textareaQueryResult,$selectboxOptionsTag,$inputTextTop,$optionTopType,$selectboxOrderby,$optionOrderbyType,$optionGroupbyType,$buttonCreateSpare,$buttonClearAll,$inputTextSpare,$optionAggregate,$selectSpareColumnContent,$selectboxSpares,$buttonDeleteSpare,$buttonDeleteAllSpare;Plugin.prototype={init:function(){if($selectboxTables=$(this.element).find("[name='wtables']"),$selectboxTableColumns=$(this.element).find("[name='wcolumns']"),$inputTextTop=$(this.element).find("[name='wtop']"),$optionTopType=$(this.element).find("[name='wtoptype']"),$selectboxOrderby=$(this.element).find("[name='worderby']"),$optionOrderbyType=$(this.element).find("[name='worderbytype']"),$optionGroupbyType=$(this.element).find("[name='wgroupby']"),$inputTextSpare=$(this.element).find("[name='wsparename']"),$optionAggregate=$(this.element).find("[name='waggregate']"),$selectSpareColumnContent=$(this.element).find("[name='wcolumncontent']"),$buttonCreateSpare=$(this.element).find("[name='wcreatespare']"),$selectboxSpares=$(this.element).find("[name='wspares']"),$buttonDeleteSpare=$(this.element).find("[name='wdeletespare']"),$buttonDeleteAllSpare=$(this.element).find("[name='wdeleteallspare']"),$selectboxOptionsTag=$(this.element).find("[name='worderby'],[name='wgroupby'],[name='wcolumncontent'],[name='wcolumnunion']"),$buttonClearAll=$(this.element).find("[name='wclearall']"),$textareaQueryResult=$(this.element).find("[name='wresult']"),this.options.data)try{this.initTables(this.options.data),this.initListeners(this.options.data)}catch(a){alert("Error on initialize plugin")}},initTables:function(a){var b="";for(var c in a)b+="<option value='"+c+"'>"+c+"</option>";$selectboxTables.html(b)},initListeners:function(a){var b=this;$selectboxTables.on("change",function(){var c=$(this).val();b._executeQuery(b.DataTypes.TABLE,c),b._renderColumnsOptions(a,c),b._renderOptions(a,c)}),$selectboxTableColumns.on("change",function(){var c=$(this).val(),d=[];$.each($(this).find("option"),function(){$(this).prop("selected")||d.push($(this).val())}),b._executeQuery(b.DataTypes.COLUMN,c,d),b._renderOptions(a,c)}),$selectboxOrderby.on("change",function(){var a=$(this).val();b._executeQuery(b.DataTypes.ORDERBY,a)}),$optionGroupbyType.on("change",function(){var a=$(this).val();b._executeQuery(b.DataTypes.GROUPBY,a)}),$optionOrderbyType.on("change",function(){if(""!==$selectboxOrderby.val()&&null!==$selectboxOrderby.val()){var a=$selectboxOrderby.val();b._executeQuery(b.DataTypes.ORDERBY,a)}}),$inputTextTop.on("blur",function(){var a=parseInt($(this).val(),10)||0;b._executeQuery(b.DataTypes.LIMIT,a)}),$buttonCreateSpare.on("click",function(){if(!_.isEmpty($selectSpareColumnContent.val())&&!_.isEmpty($inputTextSpare.val())){var a={name:$inputTextSpare.val(),content:$selectSpareColumnContent.val(),aggregate:$optionAggregate.val(),format:$optionAggregate.find("option:selected").attr("data-format")};b._executeQuery(b.DataTypes.SPARECOLUMN,a),b._renderOptionsSpares(),b._cleanSpare()}}),$buttonDeleteSpare.on("click",function(){var a=[];$.each($selectboxSpares.find("option"),function(){$(this).prop("selected")&&(a.push($(this).val()),$(this).remove())});for(var c=0;c<a.length;c++)for(var d=0;d<wquery.spares.length;d++){var e=wquery.spares[d].content+"-"+wquery.spares[d].name;a[c]===e&&wquery.spares.splice(wquery.spares.indexOf(wquery.spares[d]),1)}b._executeQuery(b.DataTypes.SPARECOLUMN,"")}),$buttonDeleteAllSpare.on("click",function(){$selectboxSpares.html(""),wquery.spares=[],b._executeQuery(b.DataTypes.SPARECOLUMN,"")}),$buttonClearAll.on("click",function(){b._methods.clean()})},_renderColumnsOptions:function(a,b){var c="";for(var d in a[b]){for(var e="",f=0;f<wquery.field.length;f++)if(wquery.field[f].indexOf(b+"."+a[b][d])>-1){e="selected='selected'";break}var g=b+"."+a[b][d];c+="<option "+e+" value='"+g+"'>"+a[b][d]+"</option>"}$selectboxTableColumns.html(c)},_renderOptions:function(a,b){if(null===b)return void this._cleanOptions();for(var c="<option></option>",d=0;d<wquery.from.length;d++)for(var e=wquery.from[d],f="",g=0;g<a[e].length;g++){var h=e+"."+a[e][g];$selectboxOptionsTag.val()===h&&(f="selected='selected'"),c+="<option value='"+h+"' "+f+">"+h+"</option>"}$selectboxOptionsTag.html(c)},_renderOptionsSpares:function(){for(var a="",b=0;b<wquery.spares.length;b++)a+="<option value='"+wquery.spares[b].content+"-"+wquery.spares[b].name+"'>"+wquery.spares[b].content+" ( "+wquery.spares[b].name+" )</option>";$selectboxSpares.html(a)},_cleanSpare:function(){$inputTextSpare.val(""),$optionAggregate.find("option:selected").removeAttr("selected"),$optionAggregate.find("option:eq(0)").attr("selected","selected"),$selectSpareColumnContent.find("option:selected").removeAttr("selected"),$selectSpareColumnContent.find("option:eq(0)").attr("selected","selected")},_cleanOptions:function(){$selectboxOptionsTag.html("")},_executeQuery:function(type,val,unval){var str="";switch(type){case this.DataTypes.TABLE:wquery.from.length<=1&&0===wquery.field.length&&(wquery.from=[],wquery.from.push(val));break;case this.DataTypes.COLUMN:if(null===val&&0===wquery.from.length){wquery.from=[],wquery.from.push($selectboxTables.val()),wquery.field=[];break}if(null===val&&(wquery.from=_.difference(wquery.from,$selectboxTables.val()),0===wquery.from.length)){wquery.from.push($selectboxTables.val()),wquery.field=[];break}_.findWhere(wquery.from,$selectboxTables.val())===undefined&&null!==val&&(wquery.from=_.union(wquery.from,$selectboxTables.val())),wquery.field=_.union(wquery.field,val),wquery.field=_.difference(wquery.field,unval),wquery.field=_.compact(wquery.field);break;case this.DataTypes.LIMIT:wquery.limit=val;break;case this.DataTypes.ORDERBY:if(""===val){wquery.order=null;break}wquery.order=val+","+$optionOrderbyType.filter(function(){return $(this).is(":checked")}).val();break;case this.DataTypes.GROUPBY:wquery.group=val;break;case this.DataTypes.SPARECOLUMN:_.isEmpty(val)||(wquery.spares=_.union(wquery.spares,val));break;default:wquery.from.push(val)}var froms=wquery.from;for(var from in froms)_.isEmpty(froms[from])||(str+=".from('"+froms[from]+"')");var fields=wquery.field;for(var field in fields)_.isEmpty(fields[field])||(str+=".field('"+fields[field]+"')");for(var spares=wquery.spares,i=0;i<spares.length;i++)str+=_.isEmpty(spares[i].aggregate)?".field('"+spares[i].content+"', '"+spares[i].name+"')":_.isEmpty(spares[i].format)?".field('"+spares[i].aggregate+"("+spares[i].content+")', '"+spares[i].name+"')":'.field("'+spares[i].aggregate+"("+spares[i].content+", '"+spares[i].format+"')\", '"+spares[i].name+"')";var order=wquery.order;_.isEmpty(order)||(str+=".order('"+order.split(",")[0]+"',"+order.split(",")[1]+")");var group=wquery.group;_.isEmpty(group)||(str+=".group('"+group+"')"),$textareaQueryResult.val(eval("squel.select()"+str))},methods:{clean:function(a,b){$selectboxTableColumns.html(""),$(b).find("input, textarea, select").not("[type='button'], [type='submit'], [type='reset'], [type='hidden'], [type='radio']").val("").removeAttr("selected"),$(b).find("#wasc").attr("checked","checked"),$(b).find("#wdesc").removeAttr("checked"),wquery={},wquery={from:[],field:[],spares:[],distintic:{},join:{},left_join:{},right_join:{},group:{},order:null,limit:0,where:{}}}}},$.fn[pluginName]=function(a){return this.each(function(){$.data(this,"plugin_"+pluginName)||_.isString(a)?$.data(this,"plugin_"+pluginName)&&_.isString(a)&&new Plugin(this,a):$.data(this,"plugin_"+pluginName,new Plugin(this,a))})}}(jQuery,window,document);